name: Frontend Tests

on:
  pull_request:
  push:
    paths:
      - 'frontend/**'
    branches:
      - main

env:
  JWT_ECDSA_PUBLIC_KEY: ${{ secrets.JWT_ECDSA_PUBLIC_KEY }}
  JWT_ECDSA_PRIVATE_KEY: ${{ secrets.JWT_ECDSA_PRIVATE_KEY }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

jobs:
  run-tests:
    runs-on: ubuntu-24.04

    services:
      postgresdb:
        image: postgres:16.3-bookworm
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: frontend/pyproject.toml
          architecture: x64

      - name: Install dependencies (and project)
        working-directory: frontend
        run: |
          python -m pip install -U pip
          pip install poetry
          poetry install --with test

      - name: Create extensions on the PostgreSQL database
        run: >-
          psql -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          "host=localhost port=5432 dbname=postgres user=postgres password=postgres"
          psql -c 'CREATE EXTENSION IF NOT EXISTS "citext";'
          "host=localhost port=5432 dbname=postgres user=postgres password=postgres"

      - name: Run the tests
        working-directory: frontend
        env:
          POSTGRES_URI: postgresql+psycopg://postgres:postgres@localhost:5432/postgres
        run: poetry run pytest
