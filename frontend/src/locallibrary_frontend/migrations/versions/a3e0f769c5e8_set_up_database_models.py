"""set up database models

Revision ID: a3e0f769c5e8
Revises:
Create Date: 2024-09-18 12:29:58.898380

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a3e0f769c5e8"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("name", postgresql.CITEXT(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_category")),
    )
    op.create_table(
        "publisher",
        sa.Column("name", postgresql.CITEXT(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_publisher")),
    )
    op.create_table(
        "user",
        sa.Column("email", postgresql.CITEXT(), nullable=False),
        sa.Column("first_name", postgresql.CITEXT(), nullable=False),
        sa.Column("last_name", postgresql.CITEXT(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("email", name=op.f("pk_user")),
    )
    op.create_table(
        "book",
        sa.Column("isbn", postgresql.CITEXT(), nullable=False),
        sa.Column("title", postgresql.CITEXT(), nullable=False),
        sa.Column("summary", postgresql.CITEXT(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("publisher_name", postgresql.CITEXT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["publisher_name"],
            ["publisher.name"],
            name=op.f("fk_book_publisher_name_publisher"),
        ),
        sa.PrimaryKeyConstraint("isbn", name=op.f("pk_book")),
    )
    op.create_table(
        "book_category",
        sa.Column("book_isbn", postgresql.CITEXT(), nullable=False),
        sa.Column("category_name", postgresql.CITEXT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_isbn"], ["book.isbn"], name=op.f("fk_book_category_book_isbn_book")
        ),
        sa.ForeignKeyConstraint(
            ["category_name"],
            ["category.name"],
            name=op.f("fk_book_category_category_name_category"),
        ),
        sa.PrimaryKeyConstraint(
            "book_isbn", "category_name", name=op.f("pk_book_category")
        ),
    )
    op.create_table(
        "book_instance",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("due_date", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.Column("book_isbn", postgresql.CITEXT(), nullable=False),
        sa.Column("borrower_id", postgresql.CITEXT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_isbn"],
            ["book.isbn"],
            name=op.f("fk_book_instance_book_isbn_book"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["borrower_id"],
            ["user.email"],
            name=op.f("fk_book_instance_borrower_id_user"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_book_instance")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("book_instance")
    op.drop_table("book_category")
    op.drop_table("book")
    op.drop_table("user")
    op.drop_table("publisher")
    op.drop_table("category")
    # ### end Alembic commands ###
